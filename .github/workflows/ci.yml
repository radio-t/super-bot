name: build
on: [push, pull_request]
jobs:

  build:
    name: build
    runs-on: ubuntu-latest
    steps:

    - name: set up go 1.17
      uses: actions/setup-go@v3
      with:
        go-version: 1.17
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: test
      run: |
        cd app && go test -race -v -mod=readonly -timeout=60s -covermode=atomic -coverprofile=$GITHUB_WORKSPACE/profile.cov_tmp ./...
        cat $GITHUB_WORKSPACE/profile.cov_tmp | grep -v "mock_" > $GITHUB_WORKSPACE/profile.cov

    - name: install golangci-lint and goveralls
      run: |
        curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $GITHUB_WORKSPACE v1.49.0
        go install github.com/mattn/goveralls@latest

    - name: run linters
      run: $GITHUB_WORKSPACE/golangci-lint run --config .golangci.yml ./...

    - name: build
      run: cd app && go build -race -v -mod=readonly

    - name: submit coverage
      run: $(go env GOPATH)/bin/goveralls -service="github" -coverprofile=$GITHUB_WORKSPACE/profile.cov
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: build and push master image
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        docker build -t radiot/super-bot:master .
        docker login --username ${{ secrets.DOCKERHUB_USER }} --password ${{ secrets.DOCKERHUB_PASSWD }}
        docker push radiot/super-bot:master

    - name: build and push tagged image
      if: github.event_name == 'push' && github.event.ref_type == 'tag'
      run: |
        GIT_TAG="${GITHUB_REF#refs/tags/}"
        docker build -t radiot/super-bot:${GIT_TAG} .
        docker login --username ${{ secrets.DOCKERHUB_USER }} --password ${{ secrets.DOCKERHUB_PASSWD }}
        docker push radiot/super-bot:${GIT_TAG}
        docker tag radiot/super-bot:${GIT_TAG} radiot/super-bot:latest
        docker push radiot/super-bot:latest

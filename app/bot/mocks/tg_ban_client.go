// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	tbapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"sync"
)

// TgBanClient is a mock implementation of bot.TgBanClient.
//
//	func TestSomethingThatUsesTgBanClient(t *testing.T) {
//
//		// make and configure a mocked bot.TgBanClient
//		mockedTgBanClient := &TgBanClient{
//			SendFunc: func(c tbapi.Chattable) (tbapi.Message, error) {
//				panic("mock out the Send method")
//			},
//		}
//
//		// use mockedTgBanClient in code that requires bot.TgBanClient
//		// and then make assertions.
//
//	}
type TgBanClient struct {
	// SendFunc mocks the Send method.
	SendFunc func(c tbapi.Chattable) (tbapi.Message, error)

	// calls tracks calls to the methods.
	calls struct {
		// Send holds details about calls to the Send method.
		Send []struct {
			// C is the c argument value.
			C tbapi.Chattable
		}
	}
	lockSend sync.RWMutex
}

// Send calls SendFunc.
func (mock *TgBanClient) Send(c tbapi.Chattable) (tbapi.Message, error) {
	if mock.SendFunc == nil {
		panic("TgBanClient.SendFunc: method is nil but TgBanClient.Send was just called")
	}
	callInfo := struct {
		C tbapi.Chattable
	}{
		C: c,
	}
	mock.lockSend.Lock()
	mock.calls.Send = append(mock.calls.Send, callInfo)
	mock.lockSend.Unlock()
	return mock.SendFunc(c)
}

// SendCalls gets all the calls that were made to Send.
// Check the length with:
//
//	len(mockedTgBanClient.SendCalls())
func (mock *TgBanClient) SendCalls() []struct {
	C tbapi.Chattable
} {
	var calls []struct {
		C tbapi.Chattable
	}
	mock.lockSend.RLock()
	calls = mock.calls.Send
	mock.lockSend.RUnlock()
	return calls
}

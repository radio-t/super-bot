// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"sync"
)

// UKeeperClient is a mock implementation of openai.uKeeperGetter.
//
//	func TestSomethingThatUsesuKeeperGetter(t *testing.T) {
//
//		// make and configure a mocked openai.uKeeperGetter
//		mockeduKeeperGetter := &UKeeperClient{
//			GetFunc: func(link string) (string, string, error) {
//				panic("mock out the Get method")
//			},
//		}
//
//		// use mockeduKeeperGetter in code that requires openai.uKeeperGetter
//		// and then make assertions.
//
//	}
type UKeeperClient struct {
	// GetFunc mocks the Get method.
	GetFunc func(link string) (string, string, error)

	// calls tracks calls to the methods.
	calls struct {
		// Get holds details about calls to the Get method.
		Get []struct {
			// Link is the link argument value.
			Link string
		}
	}
	lockGet sync.RWMutex
}

// Get calls GetFunc.
func (mock *UKeeperClient) Get(link string) (string, string, error) {
	if mock.GetFunc == nil {
		panic("UKeeperClient.GetFunc: method is nil but uKeeperGetter.Get was just called")
	}
	callInfo := struct {
		Link string
	}{
		Link: link,
	}
	mock.lockGet.Lock()
	mock.calls.Get = append(mock.calls.Get, callInfo)
	mock.lockGet.Unlock()
	return mock.GetFunc(link)
}

// GetCalls gets all the calls that were made to Get.
// Check the length with:
//
//	len(mockeduKeeperGetter.GetCalls())
func (mock *UKeeperClient) GetCalls() []struct {
	Link string
} {
	var calls []struct {
		Link string
	}
	mock.lockGet.RLock()
	calls = mock.calls.Get
	mock.lockGet.RUnlock()
	return calls
}
